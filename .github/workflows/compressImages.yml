name: Compress Images
# https://safnaj.medium.com/image-compression-for-the-web-using-github-actions-f1156d281cda
# https://github.com/marketplace/actions/image-actions
# https://github.com/MarketingPipeline/Image-Optimizer-Action/blob/main/.github/workflows/example_workflow.yaml
# https://www.smashingmagazine.com/2015/06/efficient-image-resizing-with-imagemagick/
# https://www.overleaf.com/learn/how-to/Optimising_very_large_image_files

on:
  workflow_dispatch:
  
jobs:
  image_compress:
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions: 
      contents: write
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install ImageMagick
        uses: mfinelli/setup-imagemagick@v5
        with:
          cache: true
        #run: |
        #  sudo apt install imagemagick

      #- name: Compress images
      #  run: |
      #    #mogrify -path text.png -filter Triangle -define filter:support=2 -thumbnail 300 \
      #    #-unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 \
      #    #-define jpeg:fancy-upsampling=off -define png:compression-filter=5 -define png:compression-level=9 \
      #    #-define png:compression-strategy=1 -define png:exclude-chunk=all -interlace none \
      #    #-colorspace sRGB -strip FIGURES/Composition_NGC5084_poster_v6_paper.png
    
      - name: Compress images
        run: |
          bigfile=500000
          mindpi=500  # optimal dpi for pdf files
          avgimgsize=5 # inches
          maxsize=$mindpi*$avgimgsize
          shopt -s globstar
          for imagefile in **; do
            newname=$(echo "${imagefile}" | sed 's/UNCOMPRESSED//')
            echo "${newname}"
            fileSize=$( stat -c %s -- "${imagefile}"  )
            if [[ -f "${imagefile}" && ! -L "${imagefile}" && $fileSize > $bigfile && "${imagefile}" =~ UNCOMPRESSED\. ]]; then
              # Get the current dimensions of the image
              dimensions=$(identify -format "%wx%h" "${imagefile}")
              read -r currentWidth currentHeight <<< "$dimensions"
              # determine which, if either, dimension exceeds the max desirable size (maxsize)
              if [[ $currentWidth > $currentHeight && $currentWidth > $maxsize ]]; then
                newWidth=$maxsize
                newHeight=$((currentHeight * maxsize / currentWidth))
              else
                newHeight=$maxsize
                newWidth=$((currentWidth * maxsize / currentHeight))
              fi
              mogrify -filter Triangle -define filter:support=2 -unsharp 0.25x0.08+8.3+0.045 -dither None -quality 82 \
                -define jpeg:fancy-upsampling=off -define png:compression=filter=5 -define png:compression-level=9 \
                -define png:compression-strategy=1 -define png:exclude-chunk=all -interlace none -colerspace sRGB \
                -strip -thumbnail ''"${newWidth}x${newHeight}>"'' $imagefile
              mv -f "${imagefile}" "${newname}"
            fi
          done

      #- name: Compress images
      #  id: resize-images
      #  uses: petems/image-resizer-gh-action@master
      #  with:
      #    target: FIGURES/HST_Torus_model.png FIGURES/NGC5084_F702W.png # directory to look for images in
      #    dimensions: 90%   # parameter to change size
      #    widthLimit: 1024  # max width to check
      #    heightLimit: 768  # max height to check

      #- name: Complete initialization of folder
      #  run: |
      #    git config --global user.email "email@gmail.com"
      #    git config --global user.name "github actions"
      #    git add .
      #    git commit -m "Upload changed files"
      #    git push
      #  continue-on-error: true

          
